#!/usr/bin/env sh

#
# Copyright 2015 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass any JVM options to Gradle and discretionary options to execute Gradle.
DEFAULT_JVM_OPTS=""

APP_NAME="Gradle"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
    echo "$*"
}

die () {
    echo
    echo "ERROR: $*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

CLASSPATH_SEPARATOR=:
if $cygwin || $msys; then
  CLASSPATH_SEPARATOR=";"
fi

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done

APP_HOME=`dirname "$PRG"`

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
    [ -n "$APP_HOME" ] &&
        APP_HOME=`cygpath --unix "$APP_HOME"`
fi

# Attempt to set JAVA_HOME if it is not set
if [ -z "$JAVA_HOME" ]; then
    if $darwin; then
        [ -z "$JAVA_HOME" ] && JAVA_HOME_CANDIDATES=$(/usr/libexec/java_home)
        [ -z "$JAVA_HOME" ] && [ -d "/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home" ] && JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home"
        [ -z "$JAVA_HOME" ] && [ -d "/Library/Java/JavaVirtualMachines/jdk-1.8.jdk/Contents/Home" ] && JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk-1.8.jdk/Contents/Home"
    fi

    [ -z "$JAVA_HOME" ] && [ -d "/usr/local/java" ] && JAVA_HOME="/usr/local/java"
    # Fallback to locating java on path
    [ -z "$JAVA_HOME" ] && JAVA_HOME_CANDIDATES=$(which java)
fi

# If JAVA_HOME has not been set, try to determine it
if [ -z "$JAVA_HOME" ]; then
    # If we have a candidate, use it
    if [ ! -z "$JAVA_HOME_CANDIDATES" ]; then
        JAVA_HOME=$(echo "$JAVA_HOME_CANDIDATES" | head -n1)
    fi

    # For Cygwin, ensure paths are in UNIX format before anything is touched
    if $cygwin ; then
        [ -n "$JAVA_HOME" ] &&
            JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
    fi

    # For Cygwin, ensure paths are in UNIX format before anything is touched
    if $cygwin ; then
        [ -n "$JAVA_HOME" ] &&
            JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
    fi
fi

# Check if JAVA_HOME is valid
if [ -z "$JAVA_HOME" ] || [ ! -d "$JAVA_HOME" ]; then
    die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Set JAVA_EXE
JAVA_EXE="$JAVA_HOME/bin/java"

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --windows "$APP_HOME"`
    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
    JAVA_EXE=`cygpath --path --windows "$JAVA_EXE"`
fi

# Find the project root directory
PROJECT_ROOT="$APP_HOME"
while [ ! -f "$PROJECT_ROOT/gradlew" ] ; do
    PROJECT_ROOT=`dirname "$PROJECT_ROOT"`
    if [ "$PROJECT_ROOT" = "/" ] ; then
        die "ERROR: Could not find project root directory."
    fi
done

# Set GRADLE_OPTS
GRADLE_OPTS="-Dorg.gradle.appname=$APP_BASE_NAME"

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    PROJECT_ROOT=`cygpath --path --windows "$PROJECT_ROOT"`
fi

# Split up the JVM options only if DEFAULT_JVM_OPTS is not null
if [ -n "$DEFAULT_JVM_OPTS" ] ; then
    JVM_OPTS=($DEFAULT_JVM_OPTS)
fi
JVM_OPTS+=("-Dorg.gradle.appname=$APP_BASE_NAME")

# Add GRADLE_OPTS and JAVA_OPTS to JVM_OPTS
if [ -n "$GRADLE_OPTS" ] ; then
    JVM_OPTS+=("$GRADLE_OPTS")
fi
if [ -n "$JAVA_OPTS" ] ; then
    JVM_OPTS+=("$JAVA_OPTS")
fi

# Add the gradle wrapper jar to the classpath
WRAPPER_JAR="$APP_HOME/gradle/wrapper/gradle-wrapper.jar"
if [ ! -f "$WRAPPER_JAR" ] ; then
    die "ERROR: Could not find wrapper jar '$WRAPPER_JAR'."
fi

# Execute Gradle
exec "$JAVA_EXE" "${JVM_OPTS[@]}" -cp "$WRAPPER_JAR" org.gradle.wrapper.GradleWrapperMain "$@"